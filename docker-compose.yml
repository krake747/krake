version: "3.9"


volumes:
  krake.volume.sql:

services:
  krake.api:
    image: kkraemer747/krake.api
    container_name: Krake.Api
    build:
      context: .
      dockerfile: src/Krake.Api/Dockerfile
      network: host
    depends_on:
      krake.database.sql:
        condition: service_started
    environment:
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Test1234!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/certificates/cert.pfx
    ports:
      - "5000:8080"
      - "5001:8081"

  krake.database.sql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: Krake.Database.Sql
    environment:
      - ACCEPT_EULA=true
      - MSSQL_SA_PASSWORD=Admin#123
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
  #    volumes:
  #      - krake.volume.sql:/var/opt/mssql # Docker
  #      - ./.containers/mssql:/var/opt/mssql/data # Local
  # https://github.com/microsoft/mssql-docker/issues/542#issuecomment-1686026331

  krake.database.sql.migrator:
    depends_on: [ krake.database.sql ]
    image: krake.database.sql.migrator
    container_name: Krake.Database.Sql.Migrator
    build:
      context: .
      dockerfile: database/Krake.Migrator/Dockerfile

  krake.database.sql.seed.testing:
    depends_on:
      krake.database.sql.migrator:
        condition: service_completed_successfully
    image: krake.database.sql.seed.testing
    container_name: Krake.Database.Sql.Seed.Testing
    build:
      context: .
      dockerfile: database/testing/Dockerfile

  krake.identity:
    image: quay.io/keycloak/keycloak:latest
    container_name: Krake.Identity
    command: start-dev #--import-realm
    environment:
      - KC_HEALTH_ENABLED=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - ./.containers/identity:/opt/keycloak/data
      - ./.files:/opt/keycloak/data/import
    ports:
      - "18080:8080"

  krake.seq:
    image: datalust/seq:latest
    container_name: Krake.Seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5002:80"
      - "5341:5341"

  krake.redis:
    image: redis:latest
    container_name: Krake.Redis
    restart: always
    ports:
      - "6379:6379"
